import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";

const Marketplace = () => {
  const [products, setProducts] = useState([]);
  const [form, setForm] = useState({ name: "", description: "", price: "", quantity: "" });
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();

  const token = localStorage.getItem("token");

  useEffect(() => {
    if (!token) {
      navigate("/login");
      return;
    }

    const fetchProducts = async () => {
      try {
        const res = await fetch("/api/products", {
          headers: { Authorization: `Bearer ${token}` },
        });
        if (res.ok) {
          const data = await res.json();
          setProducts(data.products);
        }
      } catch (err) {
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    fetchProducts();
  }, [token, navigate]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleAddProduct = async (e) => {
    e.preventDefault();
    try {
      const res = await fetch("/api/products", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify(form),
      });
      if (res.ok) {
        const newProduct = await res.json();
        setProducts([...products, newProduct]);
        setForm({ name: "", description: "", price: "", quantity: "" });
      } else {
        alert("Failed to add product");
      }
    } catch (err) {
      console.error(err);
    }
  };

  const handleBuy = async (id) => {
    try {
      const res = await fetch(`/api/orders`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({ product_id: id, quantity: 1 }),
      });
      if (res.ok) {
        alert("‚úÖ Order placed successfully!");
      } else {
        alert("‚ùå Failed to place order.");
      }
    } catch (err) {
      console.error(err);
    }
  };

  if (loading) return <p className="p-6">Loading marketplace...</p>;

  return (
    <div className="p-6">
      <h2 className="text-2xl font-bold mb-4">üåæ AgriNetwork Marketplace</h2>

      {/* Add product form */}
      <form onSubmit={handleAddProduct} className="mb-6 space-y-2 bg-white p-4 rounded shadow">
        <h3 className="font-semibold">Add New Product</h3>
        <input
          type="text"
          name="name"
          value={form.name}
          onChange={handleChange}
          placeholder="Product name"
          className="w-full border p-2 rounded"
          required
        />
        <textarea
          name="description"
          value={form.description}
          onChange={handleChange}
          placeholder="Description"
          className="w-full border p-2 rounded"
        />
        <input
          type="number"
          name="price"
          value={form.price}
          onChange={handleChange}
          placeholder="Price (‚Ç¶)"
          className="w-full border p-2 rounded"
          required
        />
        <input
          type="number"
          name="quantity"
          value={form.quantity}
          onChange={handleChange}
          placeholder="Quantity"
          className="w-full border p-2 rounded"
          required
        />
        <button className="w-full bg-green-600 text-white p-2 rounded hover:bg-green-700">
          + Add Product
        </button>
      </form>

      {/* Product list */}
      <h3 className="font-semibold mb-2">Available Products</h3>
      {products.length === 0 ? (
        <p>No products yet. Be the first to add!</p>
      ) : (
        <div className="grid md:grid-cols-2 gap-4">
          {products.map((p) => (
            <div key={p.id} className="border rounded p-4 bg-white shadow flex flex-col justify-between">
              <div>
                <h4 className="font-bold text-lg">{p.name}</h4>
                <p className="text-sm text-gray-600">{p.description}</p>
                <p className="mt-2">‚Ç¶{p.price} ({p.quantity} available)</p>
              </div>
              <button
                onClick={() => handleBuy(p.id)}
                className="mt-4 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
              >
                Buy
              </button>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default Marketplace;